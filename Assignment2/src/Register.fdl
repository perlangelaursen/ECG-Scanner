dp Register(
	in asel, bsel, storesel : ns(3);
	in storeenable : ns(1);
	in storedata : tc(32);
	out a, b : tc(32)
	) {

	reg r0, r1, r2, r3, r4, r5, r6, r7 : ns(32);

	always {
		a = asel == 1 ? r1 :
			asel == 2 ? r2 :
			asel == 3 ? r3 :
			asel == 4 ? r4 :
			asel == 5 ? r5 :
			asel == 6 ? r6 :
			asel == 7 ? r7 : 0;

		b =	bsel == 1 ? r1 :
			bsel == 2 ? r2 :
			bsel == 3 ? r3 :
			bsel == 4 ? r4 :
			bsel == 5 ? r5 :
			bsel == 6 ? r6 :
			bsel == 7 ? r7 : 0;

		r1 = storeenable ? storesel == 1 ? storedata : r1 : r1;
		r2 = storeenable ? storesel == 2 ? storedata : r2 : r2;
		r3 = storeenable ? storesel == 3 ? storedata : r3 : r3;
		r4 = storeenable ? storesel == 4 ? storedata : r4 : r4;
		r5 = storeenable ? storesel == 5 ? storedata : r5 : r5;
		r6 = storeenable ? storesel == 6 ? storedata : r6 : r6;
		r7 = storeenable ? storesel == 7 ? storedata : r7 : r7;
	}
}

dp testRegister(
	out asel, bsel, storesel : ns(3);
	out storeenable : ns(1);
	out storedata : tc(32);
	in a, b : tc(32)
	) {

	always {
		$display($dec, "Cycle: ", $cycle);
		$display($dec, "asel=", asel, ", a=", a, ", bsel=", bsel, ", b=", b);
		$display($dec, "storeenable=", storeenable, ", storesel=", storesel, ", storedata=", storedata);
	}

	sfg test_0 { asel = 3; bsel = 4; storesel = 5; storeenable = 1; storedata = 34;}
	sfg test_1 { asel = 5; bsel = 6; storesel = 7; storeenable = 1; storedata = 23;}
	sfg test_2 { asel = 5; bsel = 7; storesel = 1; storeenable = 1; storedata = 222;}
	sfg test_3 { asel = 1; bsel = 7; storesel = 3; storeenable = 0; storedata = 78;}
	sfg test_4 { asel = 3; bsel = 3; storesel = 2; storeenable = 1; storedata = 123;}
	sfg test_5 { asel = 0; bsel = 4; storesel = 2; storeenable = 0; storedata = 123;}
	sfg test_6 { asel = 0; bsel = 4; storesel = 0; storeenable = 1; storedata = 324;}
	sfg test_7 { asel = 0; bsel = 0; storesel = 0; storeenable = 1; storedata = 324;}
}

fsm f_testbench(testRegister) {
	initial s0;
	state s1, s2, s3, s4, s5, s6, s7;
	@s0 (test_0) -> s1;
	@s1 (test_1) -> s2;
	@s2 (test_2) -> s3;
	@s3 (test_3) -> s4;
	@s4 (test_4) -> s5;
	@s5 (test_5) -> s6;
	@s6 (test_6) -> s7;
	@s7 (test_7) -> s0;
}

system myFirstSystem {
	Register(asel, bsel, storesel, storeenable, storedata, a, b);
	testRegister(asel, bsel, storesel, storeenable, storedata, a, b);
}